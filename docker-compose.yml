# File: docker-compose.yml
# This file defines how Docker should run your multi-container application.

services:
  # Frontend Service (React App served by Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: osint-crm-frontend
    ports:
      - "8080:80"
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - osint-crm-network

  # Backend Service (Node.js/Express API)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: osint-crm-backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: db
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-changeme}
      DB_NAME: ${DB_NAME:-osint_crm_db}
      DB_PORT: 5432
    volumes:
      - ./backend/public:/usr/src/app/public
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - osint-crm-network

  # Database Service (PostgreSQL)
  db:
    image: postgres:15-alpine
    container_name: osint-crm-db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
      POSTGRES_DB: ${DB_NAME:-osint_crm_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - osint-crm-network

# Define a network for the services to communicate
networks:
  osint-crm-network:
    driver: bridge

# Define a named volume for persistent PostgreSQL data
volumes:
  postgres_data: